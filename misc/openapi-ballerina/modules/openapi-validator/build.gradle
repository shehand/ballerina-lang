/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"
//apply from: "$rootDir/gradle/javaProject.gradle"
apply plugin: 'com.github.johnrengelman.shadow'
apply from: "$rootDir/gradle/baseNativeStdLibProject.gradle"

configurations.all {
    resolutionStrategy.preferProjectModules()
}

dependencies {
    implementation 'io.swagger.parser.v3:swagger-parser'

    // Standard libs
    implementation project(':ballerina-lang')
    testCompile 'org.testng:testng'
}

description = 'Ballerina - OpenAPI - Validator'

jar {
    enabled = false
    dependsOn(shadowJar { classifier = null })
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        include(dependency('commons-io:commons-io'))
        include(dependency('javax.validation:validation-api'))
        include(dependency('io.swagger:swagger-core'))
        include(dependency('io.swagger:swagger-models'))
        include(dependency('io.swagger:swagger-parser'))
        include(dependency('io.swagger.core.v3:swagger-core'))
        include(dependency('io.swagger.core.v3:swagger-models'))
        include(dependency('io.swagger.parser.v3:swagger-parser'))
        include(dependency('io.swagger.parser.v3:swagger-parser-core'))
        include(dependency('io.swagger.parser.v3:swagger-parser-v2-converter'))
        include(dependency('io.swagger.parser.v3:swagger-parser-v3'))
        include(dependency('com.google.code.gson:gson'))
        exclude('META-INF/*.SF')
        exclude('META-INF/*.DSA')
        exclude('META-INF/*.RSA')
    }
}

test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}