openapi: "3.0.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: "pet"
    description: "Everything about your Pets"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "store"
    description: "Access to Petstore orders"
  - name: "user"
    description: "Operations about user"
    externalDocs:
      description: "Find out more about our store"
      url: ""
paths:
  /nestedComponents:
    post:
      operationId: getPets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourNestedComponent'
      requestBody:
components:
  schemas:
    FourNestedComponent:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        shipDate:
          type: "string"
        category:
          $ref: "#/components/schemas/Category"
      xml:
        name: "Order"
    Category:
      type: object
      properties:
        name:
          type: string
        tag:
          $ref: "#/components/schemas/Tag"
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        date:
          $ref: "#/components/schemas/Year"
#          type: object
#          properties:
#            day:
#              type: string
#            year:
#              $ref: "#/components/schemas/Year"
    Year:
      type: object
      properties:
        month:
          type: string
        year2:
          type: integer
          format: int64