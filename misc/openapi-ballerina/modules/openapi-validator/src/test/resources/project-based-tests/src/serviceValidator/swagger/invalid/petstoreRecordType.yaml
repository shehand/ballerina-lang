openapi: "3.0.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: ""
  contact:
    email: ""
  license:
    name: "Apache 2.0"
    url: ""
tags:
  - name: "pet"
    description: "Everything about your Pets"
    externalDocs:
      description: "Find out more"
      url: ""
  - name: "store"
    description: "Access to Petstore orders"
  - name: "user"
    description: "Operations about user"
    externalDocs:
      description: "Find out more about our store"
      url: "http://swagger.io"
paths:
  /pet:
    post:
      responses:
        "200":
          description:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecordTypeArray"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecordTypeArray"


components:
  schemas:
    Tag:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
      xml:
        name: "Tag"
    RecordTypeArray:
      type: "object"
      required:
        - "name"
        - "photoUrls"
      properties:
        id:
          type: "integer"
          format: "int64"
        category:
          type: "string"
        name:
          type: "string"
          example: "doggie"
        photoUrls:
          type: "string"
        tags:
          type: "array"
          xml:
            name: "tag"
            wrapped: true
          items:
            $ref: "#/components/schemas/Tag"
        status:
          type: "string"
          description: "pet status in the store"
          enum:
            - "available"
            - "pending"
            - "sold"
      xml:
        name: "RecordTypeArray"