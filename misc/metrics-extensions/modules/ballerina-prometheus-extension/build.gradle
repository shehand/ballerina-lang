/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "$rootDir/gradle/balNativeLibProject.gradle"
apply from: "$rootDir/gradle/baseNativeStdLibProject.gradle"

createBalo {
    jvmTarget = 'true'
}

configurations {
    prometheusJar
    balx
    generatedBalx
}

dependencies {
    baloCreat project(':lib-creator')
    baloImplementation project(path: ':ballerina-http', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-observability', configuration: 'baloImplementation')
    baloImplementation project(path: ":ballerina-config-api", configuration: 'baloImplementation')

    // transitive
    baloImplementation project(path: ":ballerina-system", configuration: 'baloImplementation')
    baloImplementation project(path: ":ballerina-crypto", configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-time', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-mime', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-runtime-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-cache', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-task', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-stringutils', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-java', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:annotations', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-log-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-reflect', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-auth', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:annotations', configuration: 'baloImplementation')

    interopImports project(':ballerina-config-api')
    interopImports project(':ballerina-http')
    interopImports project(':ballerina-io')
    interopImports project(':ballerina-log-api')
    interopImports project(':ballerina-system')
    interopImports project(':ballerina-task')
    interopImports project(':ballerina-time')
    interopImports project(':ballerina-reflect')
    interopImports project(':ballerina-crypto')
    interopImports project(':ballerina-runtime-api')
    interopImports project(':ballerina-mime')

    implementation project(':ballerina-system')
    implementation project(':ballerina-tool')
    implementation project(':ballerina-lang')
    implementation project(':ballerina-lang:annotations')
    implementation project(':ballerina-logging')
    implementation project(':lib-creator')
    implementation project(':ballerina-http')
    implementation project(':ballerina-observability')
    implementation project(":ballerina-config-api")
    implementation project(':ballerina-time')
    implementation project(':ballerina-mime')
    implementation project(':ballerina-io')
    implementation project(':ballerina-runtime-api')
    implementation project(':ballerina-cache')
    implementation project(':ballerina-task')
    implementation project(':ballerina-log-api')
    implementation project(':ballerina-reflect')
    implementation project(':ballerina-auth')
    implementation project(':ballerina-config')
    implementation project(':ballerina-runtime')
}

artifacts {
    prometheusJar file: file("$buildDir/generated-bir-jar/" + moduleName + ".jar"), builtBy: createBirJar
}

configurations.all {
    resolutionStrategy.preferProjectModules()
}

description = 'Ballerina - Prometheus Extension for Metrics'
