openapi: 3.0.0
info:
  title: OpenApi Petstore
  license:
    name: MIT
  version: 1.0.0
servers:
- url: http://petstore.{host}.io/v1
  description: The production API server
  variables:
    host:
      description: this value is assigned by the service provider
      default: openapi
- url: https://{subdomain}.swagger.io:{port}/{basePath}
  description: The production API server
  variables:
    subdomain:
      description: this value is assigned by the service provider
      default: petstore
    port:
      enum:
      - "8443"
      - "443"
      default: "443"
    basePath:
      default: v2
security:
- petstore_auth:
  - write:pets
  - read:pets
- user_auth:
  - read:user
tags:
- name: pets
  description: Pets Tag
- name: list
  description: List Tag
paths:
  /pets/{petId}:
    get:
      tags:
      - pets
      summary: Info for a specific pet
      operationId: showPetById
      parameters:
      - name: petId
        in: path
        description: The id of the pet to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets:
    get:
      operationId: operation1_operation1 listPets
      responses:
        200:
          description: Successful
          content:
            application/json:
              example: Ok
    post:
      operationId: operation1_resource post pets
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request'
        required: false
      responses:
        200:
          description: Successful
          content:
            application/json:
              example: Ok
components:
  schemas:
    Pet:
      required:
      - id
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        type:
          type: string
    Dog:
      allOf:
      - $ref: '#/components/schemas/Pet'
      - type: object
        properties:
          bark:
            type: boolean
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
    Error:
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
