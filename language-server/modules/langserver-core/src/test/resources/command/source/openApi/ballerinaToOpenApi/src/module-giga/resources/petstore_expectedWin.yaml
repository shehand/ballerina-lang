openapi: 3.0.0
info:
  title: OpenApi Petstore
  license:
    name: MIT
  version: 1.0.0
servers:
- url: http://petstore.{host}.io/v1
  description: The production API server
  variables:
    host:
      description: this value is assigned by the service provider
      default: openapi
- url: https://{subdomain}.swagger.io:{port}/{basePath}
  description: The production API server
  variables:
    subdomain:
      description: this value is assigned by the service provider
      default: petstore
    port:
      default: "443"
      enum:
      - "8443"
      - "443"
    basePath:
      default: v2
security:
- petstore_auth:
  - write:pets
  - read:pets
- user_auth:
  - read:user
tags:
- name: pets
  description: Pets Tag
- name: list
  description: List Tag
paths:
  /pets:
    get:
      tags:
      - pets
      - list
      summary: List all pets
      description: Show a list of pets in the system
      operationId: listPets
      parameters:
      - name: limit
        in: query
        description: How many items to return at one time (max 100)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: An paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /action:
    x-MULTI:
      operationId: getAction
      responses:
        200:
          description: Successful
          examples:
            application/json: Ok
      x-METHODS:
      - HEAD
      - OPTIONS
      - PATCH
      - DELETE
      - POST
      - PUT
      - GET
  /pets/{petId}:
    get:
      operationId: operation1_showPetById
      responses:
        200:
          description: Successful
          content:
            application/json:
              example: Ok
components:
  schemas:
    Pet:
      required:
      - id
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        type:
          type: string
    Dog:
      allOf:
      - $ref: '#/components/schemas/Pet'
      - type: object
        properties:
          bark:
            type: boolean
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
    Error:
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
