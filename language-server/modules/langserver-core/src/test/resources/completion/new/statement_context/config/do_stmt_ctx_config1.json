{
  "position": {
    "line": 5,
    "character": 8
  },
  "source": "statement_context/source/do_stmt_ctx_source1.bal",
  "items": [
    {
      "label": "xmlns",
      "kind": "Snippet",
      "detail": "Snippet",
      "insertText": "xmlns \"${1}\" as ${2:ns};",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "on fail clause",
      "kind": "Snippet",
      "detail": "Snippet",
      "insertText": "on fail ${1:var} ${2:varName} {\n\t${3}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xmlns",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "xmlns ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "var",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "var ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "wait",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "wait ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "start",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "start ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "flush",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "flush ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "function ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "isolated",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "isolated ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "checkpanic",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "checkpanic ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "check",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "check ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "final",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "final ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "fail",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "fail ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "if",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "if (${1:true}) {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "while",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "while (${1:true}) {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "do",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "do {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "lock",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "lock {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "foreach",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "foreach ${1:var} ${2:item} in ${3:itemList} {\n\t${4}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "fork",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "fork {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transaction",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "transaction {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "retry transaction",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "retry transaction {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "match",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "match ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "return",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "return ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "panic",
      "kind": "Snippet",
      "detail": "Statement",
      "insertText": "panic ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1",
      "kind": "Module",
      "detail": "Module",
      "insertText": "module1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ballerina/lang.object",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'object",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'object;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.boolean",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'boolean",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'boolean;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.xml",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'xml",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'xml;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.array",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'array",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'array;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.transaction",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'transaction",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'transaction;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.string",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'string",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'string;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.future",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'future",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'future;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.value",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'value",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'value;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.float",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'float",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'float;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.decimal",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'decimal",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'decimal;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.table",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'table",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'table;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.stream",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'stream",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'stream;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.error",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'error",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'error;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.typedesc",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'typedesc",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'typedesc;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.map",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'map",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'map;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.query",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'query",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'query;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.int",
      "kind": "Module",
      "detail": "Module",
      "insertText": "'int",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 1,
              "character": 0
            },
            "end": {
              "line": 1,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.'int;\n"
        }
      ]
    },
    {
      "label": "float",
      "kind": "Unit",
      "detail": "Float",
      "insertText": "float",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "readonly",
      "kind": "Unit",
      "detail": "Readonly",
      "insertText": "readonly",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xml",
      "kind": "Unit",
      "detail": "Xml",
      "insertText": "xml",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "byte",
      "kind": "Unit",
      "detail": "Byte",
      "insertText": "byte",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "handle",
      "kind": "Unit",
      "detail": "Handle",
      "insertText": "handle",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ArgsData",
      "kind": "Struct",
      "detail": "Record",
      "documentation": {
        "left": "Defaultable argument names. This is for internal use.\n"
      },
      "insertText": "ArgsData",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "never",
      "kind": "Unit",
      "detail": "Never",
      "insertText": "never",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "null",
      "kind": "Unit",
      "detail": "Nil",
      "insertText": "null",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "decimal",
      "kind": "Unit",
      "detail": "Decimal",
      "insertText": "decimal",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "string",
      "kind": "Unit",
      "detail": "String",
      "insertText": "string",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stream",
      "kind": "Unit",
      "detail": "Stream",
      "insertText": "stream",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "json",
      "kind": "Unit",
      "detail": "Json",
      "insertText": "json",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "StrandData",
      "kind": "Struct",
      "detail": "Record",
      "documentation": {
        "left": "Describes Strand execution details for the runtime.\n"
      },
      "insertText": "StrandData",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "map",
      "kind": "Unit",
      "detail": "Map",
      "insertText": "map",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "table",
      "kind": "Unit",
      "detail": "Table",
      "insertText": "table",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "anydata",
      "kind": "Unit",
      "detail": "Anydata",
      "insertText": "anydata",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "any",
      "kind": "Unit",
      "detail": "Any",
      "insertText": "any",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "int",
      "kind": "Unit",
      "detail": "Int",
      "insertText": "int",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Thread",
      "kind": "TypeParameter",
      "detail": "Finite",
      "insertText": "Thread",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "boolean",
      "kind": "Unit",
      "detail": "Boolean",
      "insertText": "boolean",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "future",
      "kind": "Unit",
      "detail": "Future",
      "insertText": "future",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "service",
      "kind": "Unit",
      "detail": "Service",
      "insertText": "service",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "typedesc",
      "kind": "Unit",
      "detail": "Typedesc",
      "insertText": "typedesc",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "error",
      "kind": "Event",
      "detail": "error",
      "insertText": "error",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "record ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record {}",
      "kind": "Snippet",
      "detail": "Snippet",
      "insertText": "record {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record {||}",
      "kind": "Snippet",
      "detail": "Snippet",
      "insertText": "record {|\n\t${1}\n|}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object",
      "kind": "Keyword",
      "detail": "Keyword",
      "insertText": "object ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object {}",
      "kind": "Snippet",
      "detail": "Snippet",
      "insertText": "object {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "value2",
      "kind": "Variable",
      "detail": "string",
      "insertText": "value2",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "value1",
      "kind": "Variable",
      "detail": "int",
      "insertText": "value1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "value4",
      "kind": "Variable",
      "detail": "int",
      "insertText": "value4",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "doSomeTask()",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _._  \n  \n  \n"
        }
      },
      "insertText": "doSomeTask();",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "testFunction()",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _._  \n  \n  \n"
        }
      },
      "insertText": "testFunction();",
      "insertTextFormat": "Snippet"
    }
  ]
}